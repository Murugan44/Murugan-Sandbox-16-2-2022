@isTest(SeeAllData = false)
public class VG_Revise_VCLController_Test {
    public static testMethod void TestMethodBASE(){
        VG_TU.policyCustomSetting();
        Account acc=VG_TU.createAccount('Customer');
        Policy__c pol=VG_TU.createPolicy('VCL',acc.id);
        Policy_Schedule__c ps=VG_Tu.createPolicySchedule(pol.id);
        ps.Product__c = 'Umbrella - Occurrence, Excluding USA';
        ps.VG_Lloyds_Product__c = 'MH-Overseas Motor';
        ps.VG_Province_List__c = 'ON';
        update ps;
        Risk_Capture__c rc=new Risk_Capture__c();
        rc.Name='Test';
        rc.Policy_Schedule__c=ps.id;
        rc.VG_Additional_Information__c='Carrier :Test <br>Policy Number:'+pol.Name+'<br> Policy Start Date:'+pol.VG_Inception_Date__c+'<br> Policy Start Date:'+pol.VG_Expiry_Date__c+'<br>Coverage : test <br>ULL <br>Premium:12';
        rc.VG_Reinstatement_Premiums__c = '1st Reinstatement :'+3;
        rc.VG_No_of_Reinstatements__c = '1';
        Insert rc;
        VG_Policy_Schedule_Asset__c rr=VG_TU.createPolicyScheduleAsset(ps.id);
        VG_Policy_Schedule_Endorsement__c pse = VG_TU.createPolicyScheduleEndorsement(ps.id);
        pse.VG_Product__c = 'Umbrella - Occurrence, Excluding USA';
        update pse;
        
        Policy_Schedule__c ps1=VG_Tu.createPolicySchedule(pol.id);
        ps1.Product__c = 'Property';
        ps1.VG_Lloyds_Product__c = 'MH-Overseas Motor';
        update ps1;
        Risk_Capture__c rc1=new Risk_Capture__c();
        rc1.Name='Test';
        rc1.Policy_Schedule__c=ps1.id;
        rc1.VG_Additional_Information__c='Carrier :Test <br>Policy Number:'+pol.Name+'<br> Policy Start Date:'+pol.VG_Inception_Date__c+'<br> Policy Start Date:'+pol.VG_Expiry_Date__c+'<br>Coverage : test <br>ULL <br>Premium:12';
        rc1.VG_Reinstatement_Premiums__c = '1st Reinstatement :'+3;
        rc1.VG_No_of_Reinstatements__c = '1';
        Insert rc1;
        VG_Policy_Schedule_Asset__c rr1=VG_TU.createPolicyScheduleAsset(ps1.id);
        VG_Policy_Schedule_Endorsement__c pse1 = VG_TU.createPolicyScheduleEndorsement(ps1.id);
        pse1.VG_Product__c = 'Property';
        update pse1;
        
        Policy_Schedule__c ps2=VG_Tu.createPolicySchedule(pol.id);
        ps2.Product__c = 'Motor';
        ps2.VG_Lloyds_Product__c = 'MH-Overseas Motor';
        update ps2;
        Risk_Capture__c rc2=new Risk_Capture__c();
        rc2.Name='Test';
        rc2.Policy_Schedule__c=ps2.id;
        rc2.VG_Additional_Information__c='Carrier :Test <br>Policy Number:'+pol.Name+'<br> Policy Start Date:'+pol.VG_Inception_Date__c+'<br> Policy Start Date:'+pol.VG_Expiry_Date__c+'<br>Coverage : test <br>ULL <br>Premium:12';
        rc2.VG_Reinstatement_Premiums__c = '1st Reinstatement :'+3;
        rc2.VG_No_of_Reinstatements__c = '1';
        Insert rc2;
        VG_Policy_Schedule_Asset__c rr2=VG_TU.createPolicyScheduleAsset(ps2.id);
        VG_Policy_Schedule_Endorsement__c pse2 = VG_TU.createPolicyScheduleEndorsement(ps2.id);
        pse2.VG_Product__c = 'Motor';
        update pse2;
    	
        ApexPages.currentPage().getParameters().put('id', ps.id);
        ApexPages.currentPage().getParameters().put('MTAType', null);
        ApexPages.currentPage().getParameters().put('MTAStartDate', null);
        ApexPages.currentPage().getParameters().put('seletedProrateoption', null);
        VG_Revise_VCLController vcl=new VG_Revise_VCLController();
        vcl.generateReinstatement();
        vcl.cancel();
        vcl.gotostep1();
        vcl.gotostep2();
        vcl.Product_Select= 'Wrap Up Primary (Canada only)';
        vcl.gotostep2();
        vcl.processuploadAsset();
        String str = 'Location,Site Name,Combined Address,Street Number,Street Name,City,Province/State,Country,Postal Code / Zip Code,Latitude,Longitude,Flood Zone,EQ Hazard,Cresta Zone,Currency,Building SI,Contents SI,Annual Business Interruption SI,BI Indemnity Period (months),Total TIV,Occupancy,Construction type,Storeys above grade,Storeys below grade,Automatic sprinklers,FUS Zone,PD MFL,PD MFL Percentage,BI MFL,BI MFL Percentage,Lloyds Constuction Code,Lloyds Occupancy Code,Year Built,Occupancy By Insured,Occupancy By Others,Fire Protection,Has Sprinkler System,Current Year Rate,Expiring Rate,Is Earthquake Shake Covered?,Is Flood Covered?,Last Year Structurally Updated (yyyy),Population,Participation Schedule,Technical Fire Premium,Technical Fire BI Premium,Technical Earthquake Premium,Technical Flood Premium,Technical Property Other Premium,Technical BI&I Premium,Total Technical Premium,Quoted Fire Premium,Quoted Fire BI Premium,Quoted Earthquake Premium,Quoted Flood Premium,Quoted Property Other Premium,Quoted BI&I Premium,Total Quoted Premium,Fire Premium Adjustment,Fire BI Premium Adjustment,Earthquake Premium Adjustment,Flood Premium Adjustment,Property Other Premium Adjustment,BI&I Premium Adjustment,Total Premium Adjustment \r\n1,test,asd,14,tsi,tn,Ontario,india,627811,34,23,234,East,e3,USD,32424,23432,435345,56,23432,Restaurant,Test,12,45,No S,0,0,0,0,0,0,0,2021,Y,Y,test,N,2021,23,Y,Y,Q,R,S,10,20,30,40,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 \r\n1,test,asd,14,tsi,tn,Ontario,india,627811,34,23,234,East,e3,USD,32424,23432,435345,56,23432,Restaurant,Test,12,45,No S,0,0,0,0,0,0,0,2021,Y,Y,test,N,2021,23,Y,Y,Q,R,S,110,220,330,440,550,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 \r\n1,test,asd,14,tsi,tn,Ontario,india,627811,34,23,234,East,e3,USD,32424,23432,435345,56,23432,Restaurant,Test,12,45,No S,0,0,0,0,0,0,0,2021,Y,Y,test,N,2021,23,Y,Y,Q,R,S,440,50,60,70,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0';
        vcl.fileBody =  Blob.valueOf(str);
        vcl.fileName = 'Property.csv';
        vcl.processuploadAsset();
        vcl.fileBody =  Blob.valueOf(str);
        vcl.fileName = 'Property';
        vcl.processuploadAsset();
        vcl.Product_Select  = 'Motor';
        vcl.gotostep2a();
        vcl.gotostep2c();
        String strMotor = 'Prov , STAT Territory , Veh Type , Class , Driving Record,Ded-CL , Ded-CM , Ded-SP, Ded-PDDC  ,TPLManual,Sect-A Manual,BI Manual , PDT Manual , PDDC Manual , CL Manual , CM Manual , AP Manual , SP Manual , AB Manual , UA Manual , SEF44 Manual , ENDORSE Manual , SURCHARGE Manual , OPT. AB Manual , Total Manual ,RG-AB,RG-CM,Total,Unit,RG-MSRP,RG-CL/DC,Endorse \r\nON ,MR ,7,5,3,4,7,8,67,45,34,56,78,90,45,76,67,56,45,67,78,67,87,98,09,54,67,87,56,45,20,20,test,test,12 \r\nON ,MR ,7,5,3,4,7,8,67,45,34,56,78,90,45,76,67,56,45,67,78,67,87,98,09,54,67,87,56,45,20,20,test,test,12 \r\nON ,MR ,7,5,3,4,7,8,67,45,34,56,78,90,45,76,67,56,45,67,78,67,87,98,09,54,67,87,56,45,20,20,test,test,12 \r\nON ,MR ,7,5,3,4,7,8,67,45,34,56,78,90,45,76,67,56,45,67,78,67,87,98,09,54,67,87,56,45,20,20,test,test,12 \r\nON ,MR ,7,5,3,4,7,8,67,45,34,56,78,90,45,76,67,56,45,67,78,67,87,98,09,54,67,87,56,45,20,20,test,test,12 \r\nON ,MR ,7,5,3,4,7,8,67,45,34,56,78,90,45,76,67,56,45,67,78,67,87,98,09,54,67,87,56,45,20,20,test,test,12 \r\nON ,MR ,7,5,3,4,7,8,67,45,34,56,78,90,45,76,67,56,45,67,78,67,87,98,09,54,67,87,56,45,20,20,test,test,12 \r\nON ,MR ,7,5,3,4,7,8,67,45,34,56,78,90,45,76,67,56,45,67,78,67,87,98,09,54,67,87,56,45,20,20,test,test,12 \r\nON ,MR ,7,5,3,4,7,8,67,45,34,56,78,90,45,76,67,56,45,67,78,67,87,98,09,54,67,87,56,45,20,20,test,test,12 \r\nON ,MR ,7,5,3,4,7,8,67,45,34,56,78,90,45,76,67,56,45,67,78,67,87,98,09,54,67,87,56,45,20,20,test,test,12';
        VCL.fileBody =   Blob.valueOf(strMotor);
        VCL.fileName = 'Motor.csv';
        VCL.gotostep2b();
        vcl.gotostep3();
        Endorsement_Library__c el=VG_TU.createEndorsementLibraryCustom('VCL','Sub-limits');
        el.VG_Product__c = 'Motor';
        update el;
        VCL.Product_Select = 'Motor';
        VCL.gotostep4();
        VG_Revise_VCLController.LibraryWrapper lw =new VG_Revise_VCLController.LibraryWrapper();
        lw.el=el;
        lW.isSelected=true;
        VCL.LibraryWrapperList1.add(lw);
        VCL.gotostep4b();
        VCL.gotostep4c();
        vcl.Province.add('ON');
        Endorsement_Library__c el1=VG_TU.createEndorsementLibraryCustom('VCL','Endorsements');
        el1.VG_Product__c = 'Motor';
        el1.VG_Province__c = 'ON';
        update el1;
        VCL.gotostep5();
        VG_Revise_VCLController.LibraryWrapper lw1 =new VG_Revise_VCLController.LibraryWrapper();
        lw1.el=el1;
        lw1.isSelected=true;
        VCL.LibraryWrapperList.add(lw1);
        VCL.gotostep5b();
        VCL.gotostep6();
        vcl.netModelPremium = 5000;
        vcl.RiskPremium = 5500;
        vcl.endorsementPremium=3000;
        vcl.lmt = 10000;
        vcl.attachment =4500;
        vcl.layer = '1st XS' ;
        vcl.writtenShare = 10;
        vcl.sharePercent = 20;
        vcl.actualPremium=5000;
        vcl.brokerage=50;
        vcl.brokerageAmount=250000;
        vcl.grossWrittenPremium2 = 4500;
        if(vcl.sharePercent !=0)
            vcl.grossWrittenPremium=vcl.grossWrittenPremium2 /(vcl.sharePercent/100);
        else
            vcl.grossWrittenPremium=0;
        vcl.adjustmentTechPremium =5000;
        vcl.adjustment =2000;
        vcl.feeIncome =1500;
        vcl.levies = 500;
        vcl.sumInsured = 1852;
        vcl.taxamount = 1500;
        vcl.uwPremium = 15200;
        vcl.techModelPremium=5000 ;
        vcl.GrossOrNet ='Gross';
        vcl.finish();
        vcl.RemoveRR();
        vcl.addUI();
        vcl.RemoveUI();
        vcl.addRR();
        vcl.AddRiskRating();
        vcl.AddCustom();
        
        ApexPages.currentPage().getParameters().put('id', ps1.id);
        ApexPages.currentPage().getParameters().put('MTAType', null);
        ApexPages.currentPage().getParameters().put('MTAStartDate', null);
        ApexPages.currentPage().getParameters().put('seletedProrateoption', null);
        VG_Revise_VCLController vcl1=new VG_Revise_VCLController();
        vcl1.Product_Select  = '--None--';
        vcl1.gotostep2();
        vcl1.gotostep2a();
        vcl1.gotostep2c();
        vcl1.Product_Select  = 'Property';
        vcl1.PropertyDMLALert = true;
        pse.VG_Type__c = 'Sub-limits';
        VCL.existingEndorsements1.add(pse);
        vcl1.gotostep4();
        vcl1.Product_Select  = 'Property';
        Endorsement_Library__c el11=VG_TU.createEndorsementLibraryCustom('VCL','Endorsements');
        el11.VG_Product__c = 'Property';
        el11.VG_Province__c = 'ON';
        update el11;
        VCL1.gotostep5();
        vcl1.gotostep5b();
        
        ApexPages.currentPage().getParameters().put('id', ps2.id);
        ApexPages.currentPage().getParameters().put('MTAType', null);
        ApexPages.currentPage().getParameters().put('MTAStartDate', null);
        ApexPages.currentPage().getParameters().put('seletedProrateoption', null);
        VG_Revise_VCLController vcl2=new VG_Revise_VCLController();
        vcl2.LP_Select = '--None--';
        vcl2.gotostep2();
        vcl2.gotostep2a();
        vcl2.gotostep2c();
        vcl2.Product_Select  = 'GL - Occurrence, Excluding USA';
        vcl2.gotostep4();
        VCL.gotostep5();
        vcl2.Product_Select = 'General and Product Liability';
        vcl2.gotostep4();
        VCL2.gotostep5();
            
        VG_Revise_VCLController.csvFileWrapper csv = new VG_Revise_VCLController.csvFileWrapper();
        csv.AB = csv.AP = csv.SP = csv.UA = csv.SEF44 = csv.Surcharge = csv.OptAB = csv.PerUnit = csv.Client = csv.Underwriter = csv.PolicyNumber = csv.EffectiveDate = 'test';
        csv.ABFleet = csv.EndorseDetail = csv.SurchargeDetail = csv.OptABDetail = csv.FleetSummary = csv.TPL = csv.SectA = csv.BI = csv.PDT = csv.PDDC = csv.CL = csv.CM = 'test';
        csv.ABManual = csv.AmbulanceType = csv.Seating = csv.Distance = csv.Trailer = csv.CamperPrice = csv.BusPrice = csv.YearLicense = csv.MSRPCost = csv.ModelYear = 'hg';
        csv.AccidentPeriod = csv.ClassVal = csv.NA = csv.Limit1 = csv.Age = csv.EngineCC = csv.ATVType = csv.Campers = csv.Limit2 = csv.Owner = 'as';
        csv.RecordDate = csv.Comments = csv.YearsofExp = csv.HistoricalPeriod = csv.HistoricalMandatory = csv.HistoricalCL = csv.HistoricalCM = csv.HistoricalAP = csv.HistoricalSP = 'test';
        csv.Province = csv.Coverage = csv.TypeofVehicle = csv.Count = csv.IncurredLossed = csv.MSL = csv.TPLFleet = csv.SectAFleet = csv.BIFleet = csv.PDTFleet = 'hg';
        csv.PDDCFleet = csv.CLFleet = csv.APFleet = csv.SPFleet = csv.UAFleet = csv.SEF44Fleet = csv.EndorseFleet = csv.SurchargeFleet = csv.OptABFleet = csv.TotalFleet = 'as';
        csv.PerUnitFleet = csv.AgeGen = csv.MACoverage = csv.CLCoverage = csv.CMCoverage = csv.APCoverage = csv.SPCoverage = csv.CMFleet = 'as';
        
        VG_Revise_VCLController.AssetWrapper ass = new VG_Revise_VCLController.AssetWrapper();
        ass.Counter = ass.assName = ass.YearBuilt = ass.FireProtection = ass.HasSprinklerSystem = ass.LastYearStructurallyUpdatedyyyy = ass.Population = ass.ParticipationSchedule ='test';
        ass.QuotedFirePremium = ass.PropertyOtherPremiumAdjustment = ass.QuotedFireBIPremium = ass.QuotedEarthquakePremium = ass.QuotedFloodPremium = ass.QuotedPropertyOtherPremium = ass.QuotedBIIPremium = ass.TotalQuotedPremium =2;
        ass.FirePremiumAdjustment = ass.FireBIPremiumAdjustment = ass.EarthquakePremiumAdjustment = ass.FloodPremiumAdjustment = ass.BIIPremiumAdjustment = ass.TotalPremiumAdjustment = 3;
    }
    
    public static testMethod void TestMethodROC(){
        VG_TU.policyCustomSetting();
        Account acc=VG_TU.createAccount('Customer');
        Policy__c pol=VG_TU.createPolicy('VCL',acc.id);
        Policy_Schedule__c psROC=VG_Tu.createPolicySchedule(pol.id);
        psROC.Product__c = 'Umbrella - Occurrence, Excluding USA';
        psROC.VG_Lloyds_Product__c = 'MH-Overseas Motor';
        psROC.VG_Province_List__c = 'ON';
        psROC.VG_MTA_Type__c = 'Revision of Cover';
        psROC.Seleted_Prorate_Option__c = 'Flat';
        update psROC;
        Risk_Capture__c rcROC=new Risk_Capture__c();
        rcROC.Name='Test';
        rcROC.Policy_Schedule__c=psROC.id;
        rcROC.VG_Additional_Information__c='Carrier :Test <br>Policy Number:'+pol.Name+'<br> Policy Start Date:'+pol.VG_Inception_Date__c+'<br> Policy Start Date:'+pol.VG_Expiry_Date__c+'<br>Coverage : test <br>ULL <br>Premium:12';
        rcROC.VG_Reinstatement_Premiums__c = '1st Reinstatement :'+3;
        rcROC.VG_No_of_Reinstatements__c = '1';
        Insert rcROC;
        VG_Policy_Schedule_Asset__c rrROC=VG_TU.createPolicyScheduleAsset(psROC.id);
        VG_Policy_Schedule_Endorsement__c pseROC = VG_TU.createPolicyScheduleEndorsement(psROC.id);
        pseROC.VG_Product__c = 'Umbrella - Occurrence, Excluding USA';
        update pseROC;
        
        ApexPages.currentPage().getParameters().put('id', psROC.id);
        ApexPages.currentPage().getParameters().put('MTAType', 'Revision of Cover');
        ApexPages.currentPage().getParameters().put('MTAStartDate', String.ValueOf(Date.newInstance(2017, 12, 18)));
        ApexPages.currentPage().getParameters().put('seletedProrateoption', 'Flat');
        VG_Revise_VCLController vclROC=new VG_Revise_VCLController();
        vclROC.generateReinstatement();
        vclROC.cancel();
        vclROC.gotostep1();
        vclROC.gotostep2();
        vclROC.Product_Select= 'Wrap Up Primary (Canada only)';
        vclROC.gotostep2();
        vclROC.processuploadAsset();
        String strROC = 'Location,Site Name,Combined Address,Street Number,Street Name,City,Province/State,Country,Postal Code / Zip Code,Latitude,Longitude,Flood Zone,EQ Hazard,Cresta Zone,Currency,Building SI,Contents SI,Annual Business Interruption SI,BI Indemnity Period (months),Total TIV,Occupancy,Construction type,Storeys above grade,Storeys below grade,Automatic sprinklers,FUS Zone,PD MFL,PD MFL Percentage,BI MFL,BI MFL Percentage,Lloyds Constuction Code,Lloyds Occupancy Code,Year Built,Occupancy By Insured,Occupancy By Others,Fire Protection,Has Sprinkler System,Current Year Rate,Expiring Rate,Is Earthquake Shake Covered?,Is Flood Covered?,Last Year Structurally Updated (yyyy),Population,Participation Schedule,Technical Fire Premium,Technical Fire BI Premium,Technical Earthquake Premium,Technical Flood Premium,Technical Property Other Premium,Technical BI&I Premium,Total Technical Premium,Quoted Fire Premium,Quoted Fire BI Premium,Quoted Earthquake Premium,Quoted Flood Premium,Quoted Property Other Premium,Quoted BI&I Premium,Total Quoted Premium,Fire Premium Adjustment,Fire BI Premium Adjustment,Earthquake Premium Adjustment,Flood Premium Adjustment,Property Other Premium Adjustment,BI&I Premium Adjustment,Total Premium Adjustment \r\n1,test,asd,14,tsi,tn,Ontario,india,627811,34,23,234,East,e3,USD,32424,23432,435345,56,23432,Restaurant,Test,12,45,No S,0,0,0,0,0,0,0,2021,Y,Y,test,N,2021,23,Y,Y,Q,R,S,10,20,30,40,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 \r\n1,test,asd,14,tsi,tn,Ontario,india,627811,34,23,234,East,e3,USD,32424,23432,435345,56,23432,Restaurant,Test,12,45,No S,0,0,0,0,0,0,0,2021,Y,Y,test,N,2021,23,Y,Y,Q,R,S,110,220,330,440,550,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 \r\n1,test,asd,14,tsi,tn,Ontario,india,627811,34,23,234,East,e3,USD,32424,23432,435345,56,23432,Restaurant,Test,12,45,No S,0,0,0,0,0,0,0,2021,Y,Y,test,N,2021,23,Y,Y,Q,R,S,440,50,60,70,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0';
        vclROC.fileBody =  Blob.valueOf(strROC);
        vclROC.fileName = 'Property.csv';
        vclROC.processuploadAsset();
        vclROC.fileBody =  Blob.valueOf(strROC);
        vclROC.fileName = 'Property';
        vclROC.processuploadAsset();
        vclROC.Product_Select  = 'Motor';
        vclROC.gotostep2a();
        vclROC.gotostep2c();
        String strMotorROC = 'Prov , STAT Territory , Veh Type , Class , Driving Record,Ded-CL , Ded-CM , Ded-SP, Ded-PDDC  ,TPLManual,Sect-A Manual,BI Manual , PDT Manual , PDDC Manual , CL Manual , CM Manual , AP Manual , SP Manual , AB Manual , UA Manual , SEF44 Manual , ENDORSE Manual , SURCHARGE Manual , OPT. AB Manual , Total Manual ,RG-AB,RG-CM,Total,Unit,RG-MSRP,RG-CL/DC,Endorse \r\nON ,MR ,7,5,3,4,7,8,67,45,34,56,78,90,45,76,67,56,45,67,78,67,87,98,09,54,67,87,56,45,20,20,test,test,12 \r\nON ,MR ,7,5,3,4,7,8,67,45,34,56,78,90,45,76,67,56,45,67,78,67,87,98,09,54,67,87,56,45,20,20,test,test,12 \r\nON ,MR ,7,5,3,4,7,8,67,45,34,56,78,90,45,76,67,56,45,67,78,67,87,98,09,54,67,87,56,45,20,20,test,test,12 \r\nON ,MR ,7,5,3,4,7,8,67,45,34,56,78,90,45,76,67,56,45,67,78,67,87,98,09,54,67,87,56,45,20,20,test,test,12 \r\nON ,MR ,7,5,3,4,7,8,67,45,34,56,78,90,45,76,67,56,45,67,78,67,87,98,09,54,67,87,56,45,20,20,test,test,12 \r\nON ,MR ,7,5,3,4,7,8,67,45,34,56,78,90,45,76,67,56,45,67,78,67,87,98,09,54,67,87,56,45,20,20,test,test,12 \r\nON ,MR ,7,5,3,4,7,8,67,45,34,56,78,90,45,76,67,56,45,67,78,67,87,98,09,54,67,87,56,45,20,20,test,test,12 \r\nON ,MR ,7,5,3,4,7,8,67,45,34,56,78,90,45,76,67,56,45,67,78,67,87,98,09,54,67,87,56,45,20,20,test,test,12 \r\nON ,MR ,7,5,3,4,7,8,67,45,34,56,78,90,45,76,67,56,45,67,78,67,87,98,09,54,67,87,56,45,20,20,test,test,12 \r\nON ,MR ,7,5,3,4,7,8,67,45,34,56,78,90,45,76,67,56,45,67,78,67,87,98,09,54,67,87,56,45,20,20,test,test,12';
        vclROC.fileBody =   Blob.valueOf(strMotorROC);
        vclROC.fileName = 'Motor.csv';
        vclROC.gotostep2b();
        vclROC.gotostep3();
        Endorsement_Library__c elRoc=VG_TU.createEndorsementLibraryCustom('VCL','Sub-limits');
        elRoc.VG_Product__c = 'Motor';
        update elRoc;
        vclROC.Product_Select = 'Motor';
        vclROC.gotostep4();
        VG_Revise_VCLController.LibraryWrapper lwROC =new VG_Revise_VCLController.LibraryWrapper();
        lwROC.el=elRoc;
        lwROC.isSelected=true;
        vclROC.LibraryWrapperList1.add(lwROC);
        vclROC.gotostep4b();
        vclROC.gotostep4c();
        vclROC.Province.add('ON');
        Endorsement_Library__c el1roc=VG_TU.createEndorsementLibraryCustom('VCL','Endorsements');
        el1roc.VG_Product__c = 'Motor';
        el1roc.VG_Province__c = 'ON';
        update el1roc;
        vclROC.gotostep5();
        VG_Revise_VCLController.LibraryWrapper lw1ROC =new VG_Revise_VCLController.LibraryWrapper();
        lw1ROC.el=el1roc;
        lw1ROC.isSelected=true;
        vclROC.LibraryWrapperList.add(lw1ROC);
        vclROC.gotostep5b();
        vclROC.gotostep6();
        vclROC.netModelPremium = 5000;
        vclROC.RiskPremium = 5500;
        vclROC.endorsementPremium=3000;
        vclROC.lmt = 10000;
        vclROC.attachment =4500;
        vclROC.layer = '1st XS' ;
        vclROC.writtenShare = 10;
        vclROC.sharePercent = 20;
        vclROC.actualPremium=5000;
        vclROC.brokerage=50;
        vclROC.brokerageAmount=250000;
        vclROC.grossWrittenPremium2 = 4500;
        if(vclROC.sharePercent !=0)
            vclROC.grossWrittenPremium=vclROC.grossWrittenPremium2 /(vclROC.sharePercent/100);
        else
            vclROC.grossWrittenPremium=0;
        vclROC.adjustmentTechPremium =5000;
        vclROC.adjustment =2000;
        vclROC.feeIncome =1500;
        vclROC.levies = 500;
        vclROC.sumInsured = 1852;
        vclROC.taxamount = 1500;
        vclROC.uwPremium = 15200;
        vclROC.techModelPremium=5000 ;
        vclROC.GrossOrNet ='Gross';
        vclROC.finish();
    }
    
	/*public static testMethod void TestMethod1(){
        VG_TU.policyCustomSetting();
        Account acc=VG_TU.createAccount('Customer');
        Policy__c pol=VG_TU.createPolicy('VCL',acc.id);
        Endorsement_Library__c EL1=VG_TU.createEndorsementLibraryCustom('VCL','Sub-limits');        
        Endorsement_Library__c EL2=VG_TU.createEndorsementLibraryCustom('VCL','Endorsements');
        Endorsement_Library__c el=new Endorsement_Library__c();
        el.Endorsement_Title__c='Test title';
        el.RecordTypeId=Schema.SObjectType.Endorsement_Library__c.getRecordTypeInfosByName().get('VCL').getRecordTypeId();
        el.Type__c='Endorsements';
        el.Text__c='this is test class text';
        Insert el;
        Endorsement_Library__c el5=new Endorsement_Library__c();
        el5.Endorsement_Title__c='Test title';
        el5.RecordTypeId=Schema.SObjectType.Endorsement_Library__c.getRecordTypeInfosByName().get('VCL').getRecordTypeId();
        el5.Type__c='Endorsements';
        el5.Text__c='this is test class text';
        Insert el5;
        List<Policy_Schedule__c> psList2=new List<Policy_Schedule__c>();
        Policy_Schedule__c ps=VG_Tu.createPolicySchedule(pol.id);
        ps.Product__c='Motor';
        update ps;
        Risk_Capture__c rc=new Risk_Capture__c();
        rc.Name='Test';
        rc.Policy_Schedule__c=ps.id;
        rc.VG_Additional_Information__c='';
        Insert rc;
        VG_Policy_Schedule_Asset__c rr=VG_TU.createPolicyScheduleAsset(ps.id);       
        ApexPages.currentPage().getParameters().put('id', ps.id);   
        ApexPages.currentPage().getParameters().put('policyCurrency', ps.id);
        ApexPages.currentPage().getParameters().put('MTAStartDate', String.valueOf(Date.newInstance(2019, 7, 17)));                
        
        VG_Revise_VCLController vcl=new VG_Revise_VCLController();
        vcl.Product_Select='Motor';
        vcl.netModelPremium = 5000;
        vcl.RiskPremium = 5500;
        vcl.endorsementPremium=3000;
        vcl.lmt = 10000;
        vcl.attachment =4500;
        vcl.layer = '1st XS' ;
        vcl.writtenShare = 10;
        vcl.sharePercent = 20;
        vcl.actualPremium=5000;
        vcl.brokerage=50;
        vcl.brokerageAmount=250000;
        vcl.grossWrittenPremium2 = 4500;
        if(vcl.sharePercent !=0)
            vcl.grossWrittenPremium=vcl.grossWrittenPremium2 /(vcl.sharePercent/100);
        else
            vcl.grossWrittenPremium=0;
        vcl.adjustmentTechPremium =5000;
        vcl.adjustment =2000;
        vcl.feeIncome =1500;
        vcl.levies = 500;
        vcl.sumInsured = 1852;
        vcl.taxamount = 1500;
        vcl.uwPremium = 15200;
        vcl.techModelPremium=5000 ;
        vcl.GrossOrNet ='Gross';
        vcl.gotostep1();
        vcl.gotostep2();
        vcl.fileName='test';
        vcl.fileBody=blob.valueOf('Province,Territory,Class,Driving Record,Vehicle Type,Sub Type,Rating Group,Unit Count,MA,CL,CM,AP,SP,DC,CL,CM,SP,TPL,Sect-A,BI,PDT,PDDC,CL,CM,AP,SP,AB,UA,SEF/OPCE44,Opt. AB,Total,Per Unit Rate\n NW,TBA,TBA,5,Plant,TBA,,6,Y,TBA,TBA,TBA,TBA,0,0,0,0,2436,0,0,0,0,0,0,0,0,235,0,9888,0,2760,0');      
        vcl.gotostep2a();
        vcl.gotostep2b();
        vcl.gotostep3();
        vcl.gotostep4();
        vcl.gotostep4b();
        vcl.gotostep5();
        vcl.gotostep5b();
        vcl.gotostep6();
        vcl.finish();
        vcl.cancel();        
    }
    public static testMethod void TestMethod2(){
        VG_TU.policyCustomSetting();
        Account acc=VG_TU.createAccount('Customer');
        Policy__c pol=VG_TU.createPolicy('VCL',acc.id);
        Endorsement_Library__c EL1=VG_TU.createEndorsementLibraryCustom('VCL','Sub-limits');        
        Endorsement_Library__c EL2=VG_TU.createEndorsementLibraryCustom('VCL','Endorsements');
        Endorsement_Library__c el=new Endorsement_Library__c();
        el.Endorsement_Title__c='Test title';
        el.RecordTypeId=Schema.SObjectType.Endorsement_Library__c.getRecordTypeInfosByName().get('VCL').getRecordTypeId();
        el.Type__c='Endorsements';
        el.Text__c='this is test class text';
        Insert el;
        Endorsement_Library__c el5=new Endorsement_Library__c();
        el5.Endorsement_Title__c='Test title';
        el5.RecordTypeId=Schema.SObjectType.Endorsement_Library__c.getRecordTypeInfosByName().get('VCL').getRecordTypeId();
        el5.Type__c='Endorsements';
        el5.Text__c='this is test class text';
        Insert el5;
        List<Policy_Schedule__c> psList2=new List<Policy_Schedule__c>();
        Policy_Schedule__c ps=VG_Tu.createPolicySchedule(pol.id);
        ps.Product__c='General and Product Liability';
        update ps;
        Risk_Capture__c rc=new Risk_Capture__c();
        rc.Name='Test';
        rc.Policy_Schedule__c=ps.id;
        rc.VG_Additional_Information__c='';
        Insert rc;
        VG_Policy_Schedule_Asset__c rr=VG_TU.createPolicyScheduleAsset(ps.id);       
        ApexPages.currentPage().getParameters().put('id', ps.id);   
        ApexPages.currentPage().getParameters().put('policyCurrency', ps.id);
        ApexPages.currentPage().getParameters().put('MTAStartDate', String.valueOf(Date.newInstance(2019, 7, 17)));                        
        VG_Revise_VCLController vcl=new VG_Revise_VCLController();
        vcl.Product_Select='General and Product Liability';
         vcl.netModelPremium = 5000;
        vcl.RiskPremium = 5500;
        vcl.endorsementPremium=3000;
        vcl.lmt = 10000;
        vcl.attachment =4500;
        vcl.layer = '1st XS' ;
        vcl.writtenShare = 10;
        vcl.sharePercent = 20;
        vcl.actualPremium=5000;
        vcl.brokerage=50;
        vcl.brokerageAmount=250000;
        vcl.grossWrittenPremium2 = 4500;
        if(vcl.sharePercent !=0)
            vcl.grossWrittenPremium=vcl.grossWrittenPremium2 /(vcl.sharePercent/100);
        else
            vcl.grossWrittenPremium=0;
        vcl.adjustmentTechPremium =5000;
        vcl.adjustment =2000;
        vcl.feeIncome =1500;
        vcl.levies = 500;
        vcl.sumInsured = 1852;
        vcl.taxamount = 1500;
        vcl.uwPremium = 15200;
        vcl.techModelPremium=5000 ;
        vcl.GrossOrNet ='Gross';
        vcl.gotostep1();
        vcl.gotostep2();
        vcl.generateReinstatement();                
        vcl.addRR();
        //vcl.SaveRR();
        vcl.AddRiskRating();
        vcl.RemoveRR();
        
        vcl.RRCalc();
        vcl.gotostep3();
        VG_Revise_VCLController.LibraryWrapper lw =new VG_Revise_VCLController.LibraryWrapper();
        lw.el=el1;
        lW.isSelected=true;
        vcl.LibraryWrapperList.add(lw);
        System.debug('isselect::'+vcl.LibraryWrapperList);
        vcl.gotostep4();
        vcl.gotostep4b();
        vcl.AddCustom();
        vcl.gotostep5();
        vcl.gotostep5b();
        vcl.gotostep6();
        vcl.UpdateFinalCalculations();
        vcl.finish();
        vcl.cancel();
        
    }
      public static testMethod void TestMethod3(){
        VG_TU.policyCustomSetting();
        Account acc=VG_TU.createAccount('Customer');
        Policy__c pol=VG_TU.createPolicy('VCL',acc.id);
        Endorsement_Library__c EL1=VG_TU.createEndorsementLibraryCustom('VCL','Sub-limits');        
        Endorsement_Library__c EL2=VG_TU.createEndorsementLibraryCustom('VCL','Endorsements');
        Endorsement_Library__c el=new Endorsement_Library__c();
        el.Endorsement_Title__c='Test title';
        el.RecordTypeId=Schema.SObjectType.Endorsement_Library__c.getRecordTypeInfosByName().get('VCL').getRecordTypeId();
        el.Type__c='Endorsements';
        el.Text__c='this is test class text';
        Insert el;
        Endorsement_Library__c el5=new Endorsement_Library__c();
        el5.Endorsement_Title__c='Test title';
        el5.RecordTypeId=Schema.SObjectType.Endorsement_Library__c.getRecordTypeInfosByName().get('VCL').getRecordTypeId();
        el5.Type__c='Endorsements';
        el5.Text__c='this is test class text';
        Insert el5;
        List<Policy_Schedule__c> psList2=new List<Policy_Schedule__c>();
        Policy_Schedule__c ps=VG_Tu.createPolicySchedule(pol.id);
        ps.Product__c='Property-Fire';
        update ps;
        Risk_Capture__c rc=new Risk_Capture__c();
        rc.Name='Test';
        rc.Policy_Schedule__c=ps.id;
        rc.VG_Additional_Information__c='';
        Insert rc;
        VG_Policy_Schedule_Asset__c rr=VG_TU.createPolicyScheduleAsset(ps.id);       
        ApexPages.currentPage().getParameters().put('id', ps.id);   
        ApexPages.currentPage().getParameters().put('policyCurrency', ps.id);
        ApexPages.currentPage().getParameters().put('MTAStartDate', String.valueOf(Date.newInstance(2019, 7, 17)));                        
          
        VG_Revise_VCLController vcl=new VG_Revise_VCLController();
        vcl.Product_Select='Property-Fire';
        vcl.netModelPremium = 5000;
        vcl.RiskPremium = 5500;
        vcl.endorsementPremium=3000;
        vcl.lmt = 10000;
        vcl.attachment =4500;
        vcl.layer = '1st XS' ;
        vcl.writtenShare = 10;
        vcl.sharePercent = 20;
        vcl.actualPremium=5000;
        vcl.brokerage=50;
        vcl.brokerageAmount=250000;
        vcl.grossWrittenPremium2 = 4500;
        if(vcl.sharePercent !=0)
            vcl.grossWrittenPremium=vcl.grossWrittenPremium2 /(vcl.sharePercent/100);
        else
            vcl.grossWrittenPremium=0;
        vcl.adjustmentTechPremium =5000;
        vcl.adjustment =2000;
        vcl.feeIncome =1500;
        vcl.levies = 500;
        vcl.sumInsured = 1852;
        vcl.taxamount = 1500;
        vcl.uwPremium = 15200;
        vcl.techModelPremium=5000 ;
        vcl.GrossOrNet ='Gross';
        vcl.gotostep1();
        vcl.gotostep2();
        vcl.gotostep2c();
        vcl.addedRRList.clear();
        vcl.gotostep3();
        vcl.gotostep4();
        vcl.gotostep4b();
        vcl.gotostep5();
        vcl.gotostep5b();
        vcl.gotostep6();
        vcl.finish();
        vcl.cancel();       
    }*/
}